import telebot
import requests
import json
import time

TOKEN = "6406496260:AAGeZS22r6fcfI2hQoNJ6_0fzLKCg5ARXd4"
CHAT_IDS = ["-1001925452270", "-1002144677415", "-1002056611872", "-1002131730381", "-1002134641485",  "-1001995332874", "-1002072859818"]  # ID –≤–∞—à–∏—Ö –≥—Ä—É–ø–ø
MPSTATS_CHAT_IDS = ["-1001925452270", "-1002144677415", "-1002056611872", "-1002131730381", "-1002134641485", "-1001995332874", "-1002072859818", "-1002119843721"]  # ID –≤–∞—à–∏—Ö –≥—Ä—É–ø–ø
API_URL = "https://smc.jonee.ru//api/"  # URL –≤–∞—à–µ–≥–æ API

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['login'])
def login(message):
    user_id = message.from_user.id
    for chat_id in CHAT_IDS:
        try:
            member = bot.get_chat_member(chat_id, user_id)
            if member.status not in ["left", "kicked"]:
                user_data = {
                    "user": member.user.to_dict(),  # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    "chat_id": chat_id,
                    "tariff": bot.get_chat(chat_id).title
                }
                # print(user_data)
                response = requests.post(f"{API_URL}moodle/create", json=user_data)
                print(response.status_code)
                if response.status_code == 200:
                    print(response.content)
                    login_info = response.json()

                    login_message = f"{message.from_user.first_name}, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:\n\n–°–µ—Ä–≤–µ—Ä: https://kurs.alaboom.org \n–õ–æ–≥–∏–Ω: <code>{login_info[0]['login']}</code>\n–ü–∞—Ä–æ–ª—å: <code>{login_info[0]['password']} </code>"
                    bot.reply_to(message, login_message, parse_mode="HTML")
                else:
                    bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.")
                return
        except telebot.apihelper.ApiException:
            pass
    bot.reply_to(message, "–í—ã –Ω–µ –∏–∑ –Ω–∞—à–∏—Ö –≥—Ä—É–ø–ø, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø–∏—à–∏—Ç–µ –º–Ω–µ!")


@bot.message_handler(commands=['mpstats'])
def login(message):
    user_id = message.from_user.id
    for chat_id in MPSTATS_CHAT_IDS:
        try:
            member = bot.get_chat_member(chat_id, user_id)
            if member.status not in ["left", "kicked"]:
                user_data = {
                    "user": member.user.to_dict(),  # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    "chat_id": chat_id,
                }
                # print(user_data)
                
                URL = f"{API_URL}mpstats/access"
                print(URL)
                response = requests.post(URL, json=user_data)
                print(response.status_code)
                if response.status_code == 200:
                    print(response.content)
                    mpstats_info = response.json()
                    mpstats_message = f"–ö–ª–∏–µ–Ω—Ç: @menej_tj\nid {mpstats_info['mpstats_id']}\n\nüë§ –õ–æ–≥–∏–Ω: <code>{mpstats_info['login']}</code>\nüîë –ü–∞—Ä–æ–ª—å: <code>{mpstats_info['password']}</code>\n\n‚ú® API Key: <code>{mpstats_info['api_key']}</code>\n\nüîó –°—Å—ã–ª–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞: http://mphero.io/login\n–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ: {mpstats_info['expire_at']}"
                    bot.reply_to(message, mpstats_message, parse_mode="HTML")
                else:
                    bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.")
                return
        except telebot.apihelper.ApiException:
            pass
    bot.reply_to(message, "–í—ã –Ω–µ –∏–∑ –Ω–∞—à–∏—Ö –≥—Ä—É–ø–ø, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø–∏—à–∏—Ç–µ –º–Ω–µ!")

@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, '–ê—Å—Å–∞–ª–æ–º—É –∞–ª–µ–π–∫—É–º –±–∞—Ä–æ–∏ –ª–æ–≥–∏–Ω –≤–∞ –ø–∞—Ä–æ–ª–∏ —Ö—É–¥—Ä–æ –≥–∏—Ä–∏—Ñ—Ç–∞–Ω —Ç—É–≥–º–∞–∏ /login –ø–∞—Ö—à –∫—É–Ω–µ–¥!')

@bot.message_handler(func=lambda message: message.chat.type == 'private')
def any_massages(message):
    bot.reply_to(message, '–ë—É–±–∞—Ö—à–µ–¥ –±–∞—Ä–æ–∏ —Ö–∞–ª–∏ –º–∞—Å–∞–ª–∞ –±–∞ @menej_tj –º—É—Ä–æ—á–∏–∞—Ç –∫—É–Ω–µ–¥')


while True:
    try:
         bot.polling()
    except Exception as e:
        time.sleep(3)
        print(e)
